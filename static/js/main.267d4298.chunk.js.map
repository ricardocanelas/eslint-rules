{"version":3,"sources":["components/Form.js","helper.js","components/List.js","components/View.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Form","onSubmit","React","useState","error","fieldRef","useRef","e","preventDefault","value","current","rules","JSON","parse","Object","keys","map","key","name","getRulesByEslintrc","className","ref","defaultValue","type","List","items","onClick","handleClick","item","index","hasUrl","url","disabled","converter","showdown","Converter","initialState","loading","content","reducer","state","action","payload","Error","View","useReducer","dispath","useEffect","hasOwnProperty","fetch","then","res","text","data","makeHtml","Header","title","onGotoBack","style","cursor","view","myrules","currentItem","App","handleSubmit","useCallback","values","list","arr","handleClickItem","handleGotoBack","json","collections","reduce","acc","collection","urlbase","base","prefix","forEach","rule","length","color","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.267d4298.chunk.js","sourcesContent":["import React from 'react'\nimport { getRulesByEslintrc } from '../helper'\n\nconst validate = () => {\n  // TODO\n  return true\n}\n\nconst initialValue = `{\n  \"extends\": [\"react-app\", \"plugin:prettier/recommended\"],\n  \"plugins\": [\"prettier\"],\n  \"rules\": {\n    \"comma-dangle\": [2, \"always-multiline\"],\n    \"comma-dangle\": [2, \"always-multiline\"],\n    \"function-paren-newline\": 0,\n    \"generator-star-spacing\": 0,\n    \"import/prefer-default-export\": 0,\n    \"new-cap\": 0,\n    \"no-case-declarations\": 0,\n    \"no-class-assign\": 1,\n    \"no-console\": 0,\n    \"no-continue\": 0,\n    \"no-param-reassign\": [2, { \"props\": false }],\n    \"no-underscore-dangle\": 0,\n    \"no-unused-vars\": [\"error\", { \"vars\": \"all\", \"args\": \"none\", \"ignoreRestSiblings\": false }],\n    \"object-curly-newline\": 0,\n    \"object-curly-spacing\": [1, \"always\"],\n    \"quotes\": [2, \"single\", { \"allowTemplateLiterals\": true }],\n    \"require-atomic-updates\": \"off\"\n  }\n}`\n\nconst Form = ({ onSubmit }) => {\n  const [error, setError] = React.useState(null)\n  const fieldRef = React.useRef(null)\n  const handleSubmit = e => {\n    e.preventDefault()\n    const value = fieldRef.current.value\n    if (validate(value)) {\n      onSubmit(getRulesByEslintrc(value))\n    } else {\n      setError('something happened')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">Copy and past your .eslintrc file</div>\n      <div className=\"form-group textarea\">\n        <textarea ref={fieldRef} defaultValue={initialValue} />\n      </div>\n      <button type=\"submit\">Submit</button>\n      {error && 'TODO'}\n    </form>\n  )\n}\n\nexport default Form\n","export const getRulesByEslintrc = value => {\n  const parse = JSON.parse(value)\n  const rules = parse.rules\n  return Object.keys(rules).map(key => {\n    return { name: key, value: rules[key] }\n  })\n}\n\nexport const normalizeRules = list => {\n  return list.collections.reduce((acc, collection) => {\n    const urlbase = collection.base || ''\n    const prefix = collection.prefix || ''\n    const rules = collection.rules.map(item => {\n      if (typeof item === 'string') {\n        return { name: `${prefix}${item}`, url: `${urlbase}${item}.md` }\n      } else if (item.hasOwnProperty('name') && item.hasOwnProperty('url')) {\n        return item\n      }\n\n      return null\n    })\n\n    rules.forEach(rule => {\n      if (rules) acc[rule.name] = rule\n    })\n\n    return acc\n  }, {})\n}\n\nexport const setURLs = (list, arr) => {\n  return arr.map(item => {\n    return {\n      ...item,\n      url: list.hasOwnProperty(item.name) ? list[item.name].url : null,\n    }\n  })\n}\n","import React from 'react'\n\n// TODO\nconst List = ({ items, onClick }) => {\n  const handleClick = item => () => {\n    onClick(item)\n  }\n\n  return (\n    <div className=\"list-container\">\n      <ul>\n        {items.map((item, index) => {\n          const hasUrl = item.url ? true : false\n          return (\n            <li key={index} onClick={handleClick(item)}>\n              <button type=\"button\" disabled={!hasUrl}>\n                {item.name}\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default List\n","import React from 'react'\nimport showdown from 'showdown'\nimport parse from 'html-react-parser'\n\nconst converter = new showdown.Converter()\n\nconst initialState = {\n  loading: false,\n  content: '',\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_CONTENT': {\n      return { ...state, loading: true, content: '' }\n    }\n    case 'SET_CONTENT': {\n      return { ...state, loading: false, content: action.payload }\n    }\n    default: {\n      throw new Error()\n    }\n  }\n}\n\n// TODO\nconst View = ({ item }) => {\n  const [state, dispath] = React.useReducer(reducer, initialState)\n\n  React.useEffect(() => {\n    if (item.hasOwnProperty('url')) {\n      dispath({ type: 'FETCH_CONTENT' })\n      fetch(item.url)\n        .then(res => res.text())\n        .then(data => {\n          dispath({ type: 'SET_CONTENT', payload: converter.makeHtml(data) })\n        })\n    }\n  }, [item])\n\n  if (item && !item.hasOwnProperty('name')) return 'Choose one'\n\n  return (\n    <div className=\"view-container\">\n      <h1 className=\"title\">rule: {item.name}</h1>\n      <div className=\"md\">{parse(state.content)}</div>\n    </div>\n  )\n}\n\nexport default View\n","import React from 'react'\n\n// TODO\nconst Header = ({ title, onGotoBack }) => {\n  return (\n    <header>\n      <h1>{title}</h1>\n      <div className=\"pull-right\">\n        <button onClick={onGotoBack} style={{ cursor: 'pointer' }}>\n          go back\n        </button>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Form from './components/Form'\nimport List from './components/List'\nimport View from './components/View'\nimport Header from './components/Header'\nimport { normalizeRules, setURLs } from './helper'\n\nconst initialState = {\n  view: 'intro',\n  rules: [],\n  myrules: [],\n  currentItem: {},\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_RULES': {\n      return { ...state, rules: action.payload }\n    }\n    case 'SET_VIEW': {\n      return { ...state, view: action.payload }\n    }\n    case 'SET_MY_RULES': {\n      return { ...state, myrules: action.payload, view: 'details' }\n    }\n    case 'SET_CURRENT_ITEM': {\n      return { ...state, currentItem: action.payload }\n    }\n    default: {\n      throw new Error()\n    }\n  }\n}\n\nconst App = () => {\n  const [state, dispath] = React.useReducer(reducer, initialState)\n\n  const handleSubmit = React.useCallback(\n    values => {\n      dispath({ type: 'SET_MY_RULES', payload: setURLs(state.rules, values) })\n    },\n    [dispath, state.rules]\n  )\n\n  const handleClickItem = React.useCallback(\n    item => {\n      dispath({ type: 'SET_CURRENT_ITEM', payload: item })\n    },\n    [dispath]\n  )\n\n  const handleGotoBack = React.useCallback(() => {\n    dispath({ type: 'SET_VIEW', payload: 'intro' })\n  }, [dispath])\n\n  React.useEffect(() => {\n    fetch('rules.json')\n      .then(res => res.json())\n      .then(data => {\n        dispath({ type: 'SET_RULES', payload: normalizeRules(data) })\n      })\n  }, [])\n\n  if (state.rules.length === 0) return <div style={{ color: '#e4e4e4' }}>Loading...</div>\n\n  return (\n    <>\n      {state.view === 'intro' && (\n        <section className=\"intro\">\n          <Form onSubmit={handleSubmit} />\n        </section>\n      )}\n      {state.view === 'details' && (\n        <section className=\"details\">\n          <Header title=\"Details\" onGotoBack={handleGotoBack} />\n          <div className=\"content\">\n            <List items={state.myrules} onClick={handleClickItem} />\n            <View item={state.currentItem} />\n          </div>\n        </section>\n      )}\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}